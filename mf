[33mcommit 92ae50fbca929b0b9ba22c9186e221482294035b[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Atul Mouraya <atul.mouraya94@gmail.com>
Date:   Sat May 21 12:52:10 2022 +0530

    FIRST COMMIT

[1mdiff --git a/nb-configuration.xml b/nb-configuration.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..5616f15[m
[1m--- /dev/null[m
[1m+++ b/nb-configuration.xml[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project-shared-configuration>[m
[32m+[m[32m    <!--[m
[32m+[m[32mThis file contains additional configuration written by modules in the NetBeans IDE.[m
[32m+[m[32mThe configuration is intended to be shared among all the users of project and[m
[32m+[m[32mtherefore it is assumed to be part of version control checkout.[m
[32m+[m[32mWithout this configuration present, some functionality in the IDE may be limited or fail altogether.[m
[32m+[m[32m-->[m
[32m+[m[32m    <properties xmlns="http://www.netbeans.org/ns/maven-properties-data/1">[m
[32m+[m[32m        <!--[m
[32m+[m[32mProperties that influence various parts of the IDE, especially code formatting and the like.[m[41m [m
[32m+[m[32mYou can copy and paste the single properties, into the pom.xml file and the IDE will pick them up.[m
[32m+[m[32mThat way multiple projects can share the same settings (useful for formatting rules for example).[m
[32m+[m[32mAny value defined here will override the pom.xml file value but is only applicable to the current project.[m
[32m+[m[32m-->[m
[32m+[m[32m        <netbeans.hint.jdkPlatform>JDK_11</netbeans.hint.jdkPlatform>[m
[32m+[m[32m        <org-netbeans-modules-javascript2-requirejs.enabled>true</org-netbeans-modules-javascript2-requirejs.enabled>[m
[32m+[m[32m    </properties>[m
[32m+[m[32m</project-shared-configuration>[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..fe0ec05[m
[1m--- /dev/null[m
[1m+++ b/pom.xml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m    <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m    <groupId>com.music.musicapp</groupId>[m
[32m+[m[32m    <artifactId>MusicApp</artifactId>[m
[32m+[m[32m    <version>1.0-SNAPSHOT</version>[m
[32m+[m[32m    <properties>[m
[32m+[m[32m        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>[m
[32m+[m[32m        <maven.compiler.source>11</maven.compiler.source>[m
[32m+[m[32m        <maven.compiler.target>11</maven.compiler.target>[m
[32m+[m[32m        <exec.mainClass>com.music.musicapp.MusicApp</exec.mainClass>[m
[32m+[m[32m    </properties>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/com/music/musicapp/Album.java b/src/main/java/com/music/musicapp/Album.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2dcab33[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/music/musicapp/Album.java[m
[36m@@ -0,0 +1,112 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.music.musicapp;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.LinkedList;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author ATul[m
[32m+[m[32m */[m
[32m+[m[32mpublic class Album {[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String artist;[m
[32m+[m[32m        private ArrayList<Song> songs;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return "Album{" + "name=" + name + ", artist=" + artist + ", songs=" + songs + '}';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Album(String name, String artist) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m        this.artist = artist;[m
[32m+[m[32m//        this.songs = songs;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getName() {[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getArtist() {[m
[32m+[m[32m        return artist;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public ArrayList<Song> getSongs() {[m
[32m+[m[32m        return songs;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setName(String name) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setArtist(String artist) {[m
[32m+[m[32m        this.artist = artist;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setSongs(ArrayList<Song> songs) {[m
[32m+[m[32m        this.songs = songs;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Album() {[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m       public boolean addToPlaylist(String title,LinkedList<Song> PlayList){[m
[32m+[m[32m        for(Song checkSong:this.songs){[m
[32m+[m[32m        if(checkSong.getName().equals(title)){[m
[32m+[m[32m        PlayList.add(checkSong);[m
[32m+[m[32m                return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        }[m[41m    [m
[32m+[m[32m            System.out.println("There is no such song in album");[m[41m  [m
[32m+[m[41m            [m
[32m+[m[32m            return false;[m
[32m+[m[32m       }[m
[32m+[m[41m    [m
[32m+[m[32m    //tracknum is refer to the index for size of LinkList of song[m
[32m+[m[32m    //index-1 is set the value for coparing it with index number of[m[41m [m
[32m+[m[32m    public boolean  addtToPlaylist(int trackNum ,LinkedList<Song> playList){[m
[32m+[m[41m    [m
[32m+[m[32m    int index=-1 ;[m
[32m+[m[32m    for(Song checked: songs){[m
[32m+[m[32m    if(index>0 && index<=this.songs.size()){[m
[32m+[m[32m        playList.add(this.songs.get(index));[m
[32m+[m[32m        playList.add(checked);[m
[32m+[m[32m        System.out.println("Song is Added Sucessfully");[m
[32m+[m[32m    return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    }[m
[32m+[m[32m        System.out.println("This System does not contain this song "+trackNum);[m
[32m+[m[32m    return false;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public Song  findSong(String name){[m
[32m+[m[32m        for(Song checkSong : this.songs){[m
[32m+[m[32m            if(checkSong.getName().equals(name)==true)[m
[32m+[m[32m            return checkSong;[m
[32m+[m[32m            }[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[41m            [m
[32m+[m[41m        [m
[32m+[m[32m        public boolean addSong(String name,double duration)        {[m
[32m+[m[32m         if(findSong(name)==null){[m
[32m+[m[32m             songs.add(new Song(name,  duration));[m
[32m+[m[32m          System.out.println("Song is Successfullly added!");[m
[32m+[m[32m          return true;[m
[32m+[m[32m         }[m[41m   [m
[32m+[m[32m         else{[m
[32m+[m[32m             System.out.println("Song Alreadhy exist!");[m[41m   [m
[32m+[m[32m         return false;[m
[32m+[m[41m         [m
[32m+[m[32m         }[m[41m [m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/com/music/musicapp/MusicApp.java b/src/main/java/com/music/musicapp/MusicApp.java[m
[1mnew file mode 100644[m
[1mindex 0000000..502917d[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/music/musicapp/MusicApp.java[m
[36m@@ -0,0 +1,214 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Project/Maven2/JavaApp/src/main/java/${packagePath}/${mainClassName}.java to edit this template[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.music.musicapp;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Iterator;[m
[32m+[m[32mimport java.util.LinkedList;[m
[32m+[m[32mimport java.util.ListIterator;[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author ATul[m
[32m+[m[32m */[m
[32m+[m[32mpublic class MusicApp {[m
[32m+[m
[32m+[m[32m    public static ArrayList<Album> albums=new ArrayList<>();[m
[32m+[m[41m    [m
[32m+[m[32m    public static void main(String[] args){[m
[32m+[m[32m        System.out.println("Hello World!");[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        Album alb= new  Album("Album", "AC/DC");[m
[32m+[m[32m        alb.addSong("TNT",4.5);[m
[32m+[m[32m        alb.addSong(" Highway",6);[m
[32m+[m[32m        alb.addSong("Again",4.32);[m
[32m+[m[32m        alb.addSong("Do",4.23);[m
[32m+[m[32m        alb.addSong("You",4.5);[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        Album alb1=new Album("album2", "Eminem");[m
[32m+[m[41m        [m
[32m+[m[32m        alb1.addSong("RapGod", 5);[m
[32m+[m[32m        alb1.addSong("NOtAfraid",4.5);[m
[32m+[m[32m        alb1.addSong("Lose yourself", 3.3);[m
[32m+[m[41m        [m
[32m+[m[32m        Album alb2=new Album("album3","BTS");[m
[32m+[m[32m        alb2.addSong("Butter", 4.5);[m
[32m+[m[32m        alb2.addSong("Mic Drop", 4.5);[m
[32m+[m[32m        alb2.addSong("Euphoria", 4.6);[m
[32m+[m[41m        [m
[32m+[m[32m        //adding all alubum in arrrayList[m
[32m+[m[32m        albums.add(alb);[m
[32m+[m[32m        albums.add(alb2);[m
[32m+[m[32m        albums.add(alb1);[m
[32m+[m[41m        [m
[32m+[m[32m        //creating LinkList of playList[m
[32m+[m[41m        [m
[32m+[m[32m        LinkedList<Song> playlist_1=new LinkedList<>();[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        albums.get(0).addToPlaylist("TNT", playlist_1);[m
[32m+[m[32m        albums.get(0).addToPlaylist("Highway", playlist_1);[m
[32m+[m[32m        albums.get(1).addToPlaylist("Butter", playlist_1);[m
[32m+[m[32m        albums.get(2).addToPlaylist("Lose yourself", playlist_1);[m
[32m+[m[41m        [m
[32m+[m[32m        play(playlist_1);[m
[32m+[m[32m//        System.out.println("Enter Your Input!");[m
[32m+[m[32m        }[m
[32m+[m[41m    [m
[32m+[m[32m    private static void play(LinkedList<Song> playList){[m
[32m+[m[32m        Scanner  sc=new Scanner(System.in);[m
[32m+[m[32m        boolean quite=false;[m
[32m+[m[32m        boolean  forward=true;[m
[32m+[m[32m        ListIterator<Song> listIterator= playList.listIterator();[m
[32m+[m[41m        [m
[32m+[m[32m        if(playList.size()==0  ){[m
[32m+[m[32m            System.out.println("this playList have no song!");[m
[32m+[m[32m        }else{[m
[32m+[m[32m            System.out.println("Now playing "+listIterator.next().toString());[m
[32m+[m[32m            printmenu();[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        while(!quite){[m
[32m+[m[41m            [m
[32m+[m[32m            int action=sc.nextInt();[m
[32m+[m[32m            sc.nextLine();[m
[32m+[m[41m            [m
[32m+[m[32m            switch(action){[m
[32m+[m[41m            [m
[32m+[m[32m                case 0:[m
[32m+[m[32m                    System.out.println("playlist complete");[m
[32m+[m[32m                 quite = true;[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[41m                    [m
[32m+[m[32m                case 1:[m
[32m+[m[32m                    if(!forward)[m
[32m+[m[32m                    {[m
[32m+[m[32m                    if(listIterator.hasNext())[m
[32m+[m[32m                    {[m
[32m+[m[32m                        listIterator.next();[m
[32m+[m[32m                    }[m
[32m+[m[32m                     forward=true;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    if(listIterator.hasNext()){[m
[32m+[m[32m                    System.out.println("Now playing "+listIterator.next().toString());[m
[32m+[m[32m                    }else{[m[41m [m
[32m+[m[32m                        System.out.println("There is no next Song rech to the end!");[m
[32m+[m[32m                    forward=false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    break;[m[41m  [m
[32m+[m[41m            [m
[32m+[m[32m                case 2:[m
[32m+[m[32m                if(forward)[m
[32m+[m[32m                {[m
[32m+[m[32m                if(listIterator.hasPrevious())[m
[32m+[m[32m                    {[m
[32m+[m[32m                        listIterator.previous();[m
[32m+[m[32m                        forward=false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                if(listIterator.hasPrevious())[m
[32m+[m[32m                    {[m
[32m+[m[32m                        System.out.println("Now playing "+listIterator.previous().toString());[m
[32m+[m[32m                }else[m
[32m+[m[32m                    {[m
[32m+[m[32m                        System.out.println("Now Playing First Song!");[m
[32m+[m[32m                        forward=false;[m
[32m+[m[32m                    }[m[41m   [m
[32m+[m[32m               }[m
[32m+[m[32m               break;[m
[32m+[m[41m               [m
[32m+[m[32m                case 3:[m
[32m+[m[32m                    if(forward)[m
[32m+[m[32m                    {[m
[32m+[m[32m                        if(listIterator.hasPrevious())[m
[32m+[m[32m                        {[m
[32m+[m[32m                            System.out.println("Now playing "+listIterator.previous().toString());[m
[32m+[m[32m                            forward=false;[m
[32m+[m[41m                            [m
[32m+[m[32m                        }[m
[32m+[m[32m                        else[m
[32m+[m[32m                        {[m
[32m+[m[32m                            System.out.println("we are At the start of the list");[m
[32m+[m[32m                        }[m
[32m+[m[41m                    [m
[32m+[m[32m                    }[m
[32m+[m[32m                    else[m
[32m+[m[32m                    {[m
[32m+[m[32m                        if(listIterator.hasNext())[m
[32m+[m[32m                        {[m
[32m+[m[32m                               System.out.println("NOw playing "+listIterator.next().toString());[m
[32m+[m[32m                               forward=true;[m
[32m+[m[32m                        }[m
[32m+[m[32m                        else[m
[32m+[m[32m                        {[m
[32m+[m[32m                            System.out.println("We have reached end of the list");[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                    break;[m
[32m+[m[41m                    [m
[32m+[m[32m                case 4:[m
[32m+[m[32m                    printList(playList);[m
[32m+[m[32m                    break;[m
[32m+[m[41m                    [m
[32m+[m[32m                case 5:[m
[32m+[m[32m                    printmenu();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 6:[m
[32m+[m[32m                    if(playList.size()>0)[m
[32m+[m[32m                    {[m
[32m+[m[32m                        listIterator.remove();[m
[32m+[m[32m                        if(listIterator.hasNext())[m
[32m+[m[32m                        {[m
[32m+[m[32m                            System.out.println("Now playing "+listIterator.next().toString());[m
[32m+[m[32m//                            forward=true;[m
[32m+[m[32m                        }[m
[32m+[m[32m                        else[m
[32m+[m[32m                        {[m
[32m+[m[32m                            if(listIterator.hasPrevious())[m
[32m+[m[32m//                            System.out.println(ListIterator.previous().toString()+"now playing ");[m
[32m+[m[32m                                System.out.println("Now palyoing "+listIterator.previous().toString());[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m        }[m
[32m+[m[41m            [m
[32m+[m[41m            [m
[32m+[m[41m  [m
[32m+[m[41m        [m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m[41m        [m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    private static void printmenu(){[m
[32m+[m[41m    [m
[32m+[m[32m        System.out.println("Available Option are \n press");[m
[32m+[m[32m        System.out.println("0 - to Quite");[m
[32m+[m[32m        System.out.println("1- to play Next Song.");[m
[32m+[m[32m        System.out.println("2- to play previous Song");[m
[32m+[m[32m        System.out.println("3-to replay current song");[m
[32m+[m[32m        System.out.println("4-List of all song");[m
[32m+[m[32m        System.out.println("5-print all available option");[m
[32m+[m[32m        System.out.println("6-delete current Song");[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    private static  void printList(LinkedList<Song> playlist){[m
[32m+[m[32m    Iterator<Song> iterator=playlist.iterator();[m
[32m+[m[32m        System.out.println("-------------------");[m
[32m+[m[32m        while(iterator.hasNext()){[m
[32m+[m[32m            System.out.println(iterator.next());[m[41m [m
[32m+[m[41m        [m
[32m+[m[32m        }[m
[32m+[m[32m    System.out.println("-------------------");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    }[m
[32m+[m
[1mdiff --git a/src/main/java/com/music/musicapp/Song.java b/src/main/java/com/music/musicapp/Song.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2793cdf[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/music/musicapp/Song.java[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32m    package com.music.musicapp;[m
[32m+[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author ATul[m
[32m+[m[32m */[m
[32m+[m[32mpublic class Song {[m
[32m+[m
[32m+[m[32m//    static void add(Song song) {[m
[32m+[m[32m//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody[m
[32m+[m[32m//    }[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private double duration;[m
[32m+[m
[32m+[m[32m    Song(String name, double duration) {[m
[32m+[m[32m        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getName() {[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public double getDuration() {[m
[32m+[m[32m        return duration;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setName(String name) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setDuration(double duration) {[m
[32m+[m[32m        this.duration = duration;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return "Song{" + "name=" + name + ", duration=" + duration + '}';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[32m+[m[41m            [m
[32m+[m[41m            [m
[32m+[m[41m           [m
\ No newline at end of file[m
[1mdiff --git a/target/classes/.netbeans_automatic_build b/target/classes/.netbeans_automatic_build[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/target/classes/com/music/musicapp/Album.class b/target/classes/com/music/musicapp/Album.class[m
[1mnew file mode 100644[m
[1mindex 0000000..7adc9ef[m
Binary files /dev/null and b/target/classes/com/music/musicapp/Album.class differ
[1mdiff --git a/target/classes/com/music/musicapp/MusicApp.class b/target/classes/com/music/musicapp/MusicApp.class[m
[1mnew file mode 100644[m
[1mindex 0000000..55a8279[m
Binary files /dev/null and b/target/classes/com/music/musicapp/MusicApp.class differ
[1mdiff --git a/target/classes/com/music/musicapp/Song.class b/target/classes/com/music/musicapp/Song.class[m
[1mnew file mode 100644[m
[1mindex 0000000..4589bc7[m
Binary files /dev/null and b/target/classes/com/music/musicapp/Song.class differ
[1mdiff --git a/target/test-classes/.netbeans_automatic_build b/target/test-classes/.netbeans_automatic_build[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
